package oop.ch09.collectionFramework.v03.list;

public class ListEx1 {

	/*
	 * 
	 *   # List 인터페이스
	 *   
	 *     - Collection 하위 인터페이스
	 *     
	 *     - 객체를 순서에 따라 저장하고 관리하는 데 필요한 메서드가 선언된 인터페이스
	 *     
	 *     - 배열의 기능을 구현하기 위한 메서드가 선언됨
	 *     
	 *     - ArrayList, Vector, LinkedList
	 * 
	 * 
	 *   # ArrayList와 Vector
	 *   
	 *     - 객체 배열 클래스
	 *     
	 *     - Vector는 자바 2 부터 제공된 클래스
	 *     
	 *     - 일반적으로 ArrayList를 더 많이 사용
	 *     
	 *     - Vector는 멀티 쓰레드 프로그램에서 동기화를 지원
	 *     
	 *       cf) 동기화 (synchronization)
	 *       
	 *         - 두 개의 쓰레드가 동시에 하나의 리소스에 접근할 때 순서를 맞추어서 데이터의 오류가 발생하지 않도록 함
	 *         
	 *     - capacity와 size는 다른 의미임
	 *     
	 *       - capacity : 배열의 용량
	 *       
	 *       - size : 배열에 포함된 요소의 개수
	 *     
	 *    
	 *   # ArrayList와 LinkedList
	 *   
	 *     - 둘 다 자료의 순차적 구조를 구현한 클래스
	 *     
	 *     - ArrayList는 배열을 구현한 클래스로 논리적 순서와 물리적 순서가 동일하다.
	 *     
	 *     - LinkedList는 논리적으로 순차적인 구조지만, 물리적으로는 순차적이지 않을 수 있음
	 *     
	 *     - LinkedList 구조
	 *     
	 *       - Next element에 대한 reference를 가지고 있음
	 *     
	 *       -------------------------------	 -------------------------------	 -------------------------------
	 *       |자료(data) | 다음 요소의 주소| --> |자료(data) | 다음 요소의 주소| --> |자료(data) | 다음 요소의 주소| --> ...
	 * 		 -------------------------------	 -------------------------------	 -------------------------------
	 * 
	 *     - LinkedList에서 자료의 추가와 삭제
	 * 
	 *       - LinkedList는 자료를 추가하거나 삭제하는 데 비용이 효율적이다.
	 * 
	 */
	
}
