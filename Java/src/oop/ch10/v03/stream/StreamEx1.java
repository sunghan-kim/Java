package oop.ch10.v03.stream;

public class StreamEx1 {

	/*
	 * 
	 *   # 스트림 (Stream)
	 *   
	 *     - 입출력 스트림과는 다른 의미
	 *   
	 *     - 자료의 대상과 관계없이 동일한 연산을 수행할 수 있는 기능 (자료의 추상화)
	 *     
	 *     - 배열, 컬렉션에 동일한 연산이 수행되어 일관성 있는 처리 가능
	 *     
	 *     - 한번 생성하고 사용한 스트림은 재사용할 수 없음
	 *     
	 *     - 스트림 연산은 기존 자료를 변경하지 않음
	 *     
	 *     - 중간 연산과 최종 연산으로 구분 됨
	 *     
	 *     - 최종 연산이 수행되어야 모든 연산이 적용되는 지연 연산
	 *     
	 *     
	 *   # 스트림 연산 - 중간 연산
	 *   
	 *     - 중간 연산 - filter(), map()
	 *     
	 *       - filter() : 조건에 맞는 요소 추출
	 *       
	 *       - map() : 요소를 변환
	 *       
	 *     - ex) 문자열의 길이가 5 이상인 요소만 출력하기
	 *     
	 *       sList.stream().filter(s -> s.length() >= 5).forEach(s -> System.out.println(s));
	 *       |------------|----------------------------|------------------------------------|
	 *             |					|									|
	 *        스트림 생성			중간 연산							최종 연산
	 *        
	 *        
	 *     - ex) 고객 클래스에서 고객 이름만 가져오기
	 *     
	 *      customerList.stream().map(c -> c.getName()).forEach(s -> System.out.println(s));
	 *      |-------------------|----------------------|-----------------------------------|
	 *      		 |						|							  |
	 *          스트림 생성				중간 연산					  최종 연산
	 *     
	 *       
	 *   # 스트림 연산 - 최종 연산
	 *   
	 *     - 스트림의 자료를 "소모"하면서 연산을 수행
	 *     
	 *     - 최종 연산 후에 스트림은 더 이상 다른 연산을 적용할 수 없음
	 *     
	 *     - forEach() : 요소를 하나씩 꺼내 옴
	 *     - count() : 요소의 개수
	 *     - sum() : 요소의 합
	 *     
	 *     - 이 외에도 여러 가지 최종 연산이 있음
	 * 
	 */
	
}
