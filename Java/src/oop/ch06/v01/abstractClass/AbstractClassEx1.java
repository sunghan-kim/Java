package oop.ch06.v01.abstractClass;

public class AbstractClassEx1 {

	/*
	 * 
	 *  # 추상 클래스 (Abstract Class)
	 *  
	 *    - 추상 메서드를 포함한 클래스
	 *    - 추상 메서드 (Abstract Method) : 구현 코드가 없이 선언부만 있는 메서드
	 *    
	 *    - abstract 예약어 사용
	 *    
	 *      - "추상 클래스는 new(인스턴스화)할 수 없음"
	 *      
	 *        ex) concrete class (추상 메서드 없이 구현한 클래스)
	 *        
	 *    - computer.java 참고
	 *    
	 *    
	 *  # 추상 클래스의 활용
	 *  
	 *    - 클래스 간의 상속 관계에서, 상위 클래스를 추상 클래스로 구현하는 경우가 있다.
	 *    - 모든 클래스에서 공통적으로 사용할 수 있는 메서드는 상위 클래스에서 직접 구현(turnOn, turnOff 등)하고, 
	 *      하위 클래스에서 반드시 구현되야 하는 메서드이면서 하위 클래스마다 다르게 구현되는 메서드의 경우에는 상위 클래스에서 추상 메서드로 구현(display, typing 등)한다. 
	 *    -> 추상 메서드에 대한 구현의 책임을 하위 클래스에 위임한다.
	 *    
	 *    - DeskTop.java 참고
	 *    
	 *    
	 *  # 추상 클래스 구현
	 *  
	 *    - 메서드와 클래스에 abstract 키워드 사용
	 *    - 추상 메서드가 포함된 클래스는 추상 클래스로 선언
	 *    
	 *    - 모든 메서드가 구현되었다고 해도 클래스에 abstract 키워드를 사용하면 추상 클래스로 지정됨
	 *    
	 *    
	 *  # 추상 클래스 사용하기
	 *  
	 *    - 추상 클래스는 주로 상속의 상위 클래스로 사용됨
	 *    
	 *    - 추상 메서드 : 하위 클래스가 구현해야 하는 메서드
	 *    
	 *    - 구현된 메서드
	 *    
	 *      - 하위 클래스가 공통으로 사용하는 기능의 메서드
	 *      
	 *      - 하위 클래스에 따라 재정의할 수 있음
	 * 
	 */
	
}
